// package: jsheets
// file: jsheets/api/sheet.proto

import * as jspb from "google-protobuf";
import * as google_protobuf_timestamp_pb from "google-protobuf/google/protobuf/timestamp_pb";
import * as jsheets_api_snippet_pb from "../../jsheets/api/snippet_pb";

export class Sheet extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  getTemplateId(): string;
  setTemplateId(value: string): void;

  getTitle(): string;
  setTitle(value: string): void;

  getDescription(): string;
  setDescription(value: string): void;

  hasAuthor(): boolean;
  clearAuthor(): void;
  getAuthor(): Sheet.Author | undefined;
  setAuthor(value?: Sheet.Author): void;

  clearSnippetsList(): void;
  getSnippetsList(): Array<jsheets_api_snippet_pb.Snippet>;
  setSnippetsList(value: Array<jsheets_api_snippet_pb.Snippet>): void;
  addSnippets(value?: jsheets_api_snippet_pb.Snippet, index?: number): jsheets_api_snippet_pb.Snippet;

  getUrl(): string;
  setUrl(value: string): void;

  hasMetadata(): boolean;
  clearMetadata(): void;
  getMetadata(): Sheet.Metadata | undefined;
  setMetadata(value?: Sheet.Metadata): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): Sheet.AsObject;
  static toObject(includeInstance: boolean, msg: Sheet): Sheet.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: Sheet, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): Sheet;
  static deserializeBinaryFromReader(message: Sheet, reader: jspb.BinaryReader): Sheet;
}

export namespace Sheet {
  export type AsObject = {
    id: string,
    templateId: string,
    title: string,
    description: string,
    author?: Sheet.Author.AsObject,
    snippetsList: Array<jsheets_api_snippet_pb.Snippet.AsObject>,
    url: string,
    metadata?: Sheet.Metadata.AsObject,
  }

  export class Metadata extends jspb.Message {
    hasCreateTime(): boolean;
    clearCreateTime(): void;
    getCreateTime(): google_protobuf_timestamp_pb.Timestamp | undefined;
    setCreateTime(value?: google_protobuf_timestamp_pb.Timestamp): void;

    hasUpdateTime(): boolean;
    clearUpdateTime(): void;
    getUpdateTime(): google_protobuf_timestamp_pb.Timestamp | undefined;
    setUpdateTime(value?: google_protobuf_timestamp_pb.Timestamp): void;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): Metadata.AsObject;
    static toObject(includeInstance: boolean, msg: Metadata): Metadata.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: Metadata, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): Metadata;
    static deserializeBinaryFromReader(message: Metadata, reader: jspb.BinaryReader): Metadata;
  }

  export namespace Metadata {
    export type AsObject = {
      createTime?: google_protobuf_timestamp_pb.Timestamp.AsObject,
      updateTime?: google_protobuf_timestamp_pb.Timestamp.AsObject,
    }
  }

  export class Author extends jspb.Message {
    getId(): string;
    setId(value: string): void;

    getName(): string;
    setName(value: string): void;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): Author.AsObject;
    static toObject(includeInstance: boolean, msg: Author): Author.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: Author, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): Author;
    static deserializeBinaryFromReader(message: Author, reader: jspb.BinaryReader): Author;
  }

  export namespace Author {
    export type AsObject = {
      id: string,
      name: string,
    }
  }

  export class Form extends jspb.Message {
    getTemplateId(): string;
    setTemplateId(value: string): void;

    getTitle(): string;
    setTitle(value: string): void;

    getDescription(): string;
    setDescription(value: string): void;

    hasAuthor(): boolean;
    clearAuthor(): void;
    getAuthor(): Sheet.Author | undefined;
    setAuthor(value?: Sheet.Author): void;

    clearSnippetsList(): void;
    getSnippetsList(): Array<jsheets_api_snippet_pb.Snippet>;
    setSnippetsList(value: Array<jsheets_api_snippet_pb.Snippet>): void;
    addSnippets(value?: jsheets_api_snippet_pb.Snippet, index?: number): jsheets_api_snippet_pb.Snippet;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): Form.AsObject;
    static toObject(includeInstance: boolean, msg: Form): Form.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: Form, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): Form;
    static deserializeBinaryFromReader(message: Form, reader: jspb.BinaryReader): Form;
  }

  export namespace Form {
    export type AsObject = {
      templateId: string,
      title: string,
      description: string,
      author?: Sheet.Author.AsObject,
      snippetsList: Array<jsheets_api_snippet_pb.Snippet.AsObject>,
    }
  }
}

