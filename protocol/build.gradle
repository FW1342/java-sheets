import org.apache.tools.ant.taskdefs.condition.Os

plugins {
  id 'java'
  id "com.google.protobuf" version "0.8.17"
}

version '0.1.0'

repositories {
  mavenCentral()
}

dependencies {
  compileOnly "io.grpc:grpc-all:$grpcVersion"
  compileOnly "javax.annotation:javax.annotation-api:$javaxAnnotationVersion"
  implementation "com.google.protobuf:protobuf-java:$protobufJavaVersion"
}

sourceSets {
  main {
    java {
      srcDirs = [
        "src/main/java",
        "${buildDir}/generated/source/proto/main/java",
        "${buildDir}/generated/source/proto/main/grpc"
      ]
    }
  }
}

def extension = Os.isFamily(Os.FAMILY_WINDOWS) ? '.cmd' : ''

// This is an optimization for the CI test workflow, allowing us not to run
// npm install on each test. The typescript files are only relevant when
// building the protocol for use in the website module.
def shouldUseTypescript = System.getenv("JSHEETS_PROTOCOL_BUILD_NO_TYPESCRIPT") != "true"

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:3.11.4"
  }
  plugins {
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:1.29.0'
    }
    if (shouldUseTypescript) {
      "ts" {
        def binary = project.projectDir.toPath().resolve(
          "node_modules/.bin/protoc-gen-ts${extension}")
        path = binary
      }
    }
  }
  generateProtoTasks {
    all()*.plugins {
      if (shouldUseTypescript) {
        "ts" {
          option 'service=grpc-web'
          outputSubDir = 'js'
        }
      }
      "grpc" {}
    }
    all()*.builtins {
      "js" {
        option 'import_style=commonjs'
        option 'binary'
        outputSubDir = 'js'
      }
    }
  }
}

apply from: './package.gradle'
